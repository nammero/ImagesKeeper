<?php

namespace App\Controller;

use App\Form\ImageType;
use App\Entity\Image;
use DateTime;
use Exception;
//use Imagine\Imagick\Image;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\File\Exception\FileException;
use Symfony\Component\HttpFoundation\RedirectResponse;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;

/**
 * Class ImageController
 * @package App\Controller
 */
class ImageController extends AbstractController
{

    /**
     * @Route("/new_image", name="new_image")
     * @Method("GET")
     * @param Request $request
     * @return RedirectResponse|Response
     * @throws Exception
     */
    public function new(Request $request)
    {
        $image = new Image();
        $form = $this->createForm(ImageType::class, $image);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            $file = $image->getFile();

            $fileName = $this->generateUniqueFileName() . '.' . $file->guessExtension();
            $image->setFileName($fileName);

            try {
                $file->move(
                    $this->getParameter('images_directory'),
                    $fileName
                );
            } catch (FileException $e) {
            }

            $date = new DateTime('now');

            $image->setUserId(1);
            $image->setLoadDate($date);
            $image->setIsActive(1);

            $em = $this->getDoctrine()->getManager();
            $em->persist($image);

            $em->flush();

            return $this->redirect($this->generateUrl('home'));
        }

        return $this->render('image/new.html.twig', [
            'form' => $form->createView(),
        ]);
    }


    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }
}
